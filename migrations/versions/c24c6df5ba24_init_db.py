"""init db

Revision ID: c24c6df5ba24
Revises: 
Create Date: 2025-08-19 15:27:23.147295

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c24c6df5ba24'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title', 'full_name', 'short_name', name='uq_department_unique_title')
    )
    op.create_table('exam_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('student_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('exam_type_id', sa.Integer(), nullable=False),
    sa.Column('discipline', sa.String(length=100), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('commission_members', sa.Text(), nullable=True),
    sa.Column('academic_year', sa.String(length=9), nullable=False),
    sa.Column('protocol_number', sa.Integer(), nullable=False),
    sa.Column('quality', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['exam_type_id'], ['exam_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('academic_year', 'protocol_number', name='uq_exam_protocol')
    )
    op.create_table('teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('main_department_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['main_department_id'], ['departments.id'], name='fk_main_department_teacher'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_report_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('got_best', sa.Integer(), nullable=True),
    sa.Column('got_good', sa.Integer(), nullable=True),
    sa.Column('got_avg', sa.Integer(), nullable=True),
    sa.Column('got_bad', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('quality', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='fk_class_report_items_department'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='fk_class_report_items_teacher'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('teacher_id', 'academic_year', 'term', name='uq_class_report_item')
    )
    op.create_table('concerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('place', sa.String(length=200), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('place', sa.String(length=200), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ensembles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lecture_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('resp_teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['resp_teacher_id'], ['teachers.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('teacher_id', 'title', 'academic_year', 'term', name='uq_lecture_teacher_title_year_term')
    )
    op.create_table('report_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('got_best', sa.Integer(), nullable=True),
    sa.Column('got_good', sa.Integer(), nullable=True),
    sa.Column('got_avg', sa.Integer(), nullable=True),
    sa.Column('got_bad', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('quality', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], name='fk_report_items_subject'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='fk_report_items_teacher'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subject_id', 'teacher_id', 'academic_year', 'term', name='uq_report_item')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('short_name', sa.String(length=40), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('admission_year', sa.Integer(), nullable=False),
    sa.Column('study_years', sa.Integer(), nullable=True),
    sa.Column('class_level', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('contact_phone', sa.String(length=20), nullable=True),
    sa.Column('lead_teacher_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=150), nullable=False),
    sa.Column('mother_full_name', sa.String(length=150), nullable=False),
    sa.Column('mother_workplace', sa.String(length=100), nullable=False),
    sa.Column('mother_occupation', sa.String(length=100), nullable=False),
    sa.Column('mother_contact_phone', sa.String(length=20), nullable=False),
    sa.Column('father_full_name', sa.String(length=150), nullable=False),
    sa.Column('father_workplace', sa.String(length=100), nullable=False),
    sa.Column('father_occupation', sa.String(length=100), nullable=False),
    sa.Column('father_contact_phone', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['lead_teacher_id'], ['teachers.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['student_statuses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.Column('class_level', sa.Integer(), nullable=False),
    sa.Column('next_class', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('concert_participations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('concert_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('ensemble_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['concert_id'], ['concerts.id'], ),
    sa.ForeignKeyConstraint(['ensemble_id'], ['ensembles.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'concert_id', name='uq_student_concert_participant')
    )
    op.create_table('contest_participations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('result', sa.String(length=64), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('ensemble_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('(student_id IS NOT NULL AND ensemble_id IS NULL) OR (student_id IS NULL AND ensemble_id IS NOT NULL)', name='chk_contest_participations_type'),
    sa.ForeignKeyConstraint(['contest_id'], ['contests.id'], ),
    sa.ForeignKeyConstraint(['ensemble_id'], ['ensembles.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ensemble_members',
    sa.Column('ensemble_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ensemble_id'], ['ensembles.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('ensemble_id', 'student_id')
    )
    op.create_table('exam_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('program', sa.Text(), nullable=False),
    sa.Column('grade', sa.String(length=2), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['exams.id'], name='fk_exam_item_event'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='fk_exam_item_student'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], name='fk_exam_item_teacher'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('open_lesson_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('term', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('resp_teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['resp_teacher_id'], ['teachers.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('teacher_id', 'title', 'academic_year', 'term', 'student_id', name='uq_openlesson_teacher_title_year_term_student')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('open_lesson_items')
    op.drop_table('exam_items')
    op.drop_table('ensemble_members')
    op.drop_table('contest_participations')
    op.drop_table('concert_participations')
    op.drop_table('class_history')
    op.drop_table('students')
    op.drop_table('report_items')
    op.drop_table('lecture_items')
    op.drop_table('ensembles')
    op.drop_table('contests')
    op.drop_table('concerts')
    op.drop_table('class_report_items')
    op.drop_table('teachers')
    op.drop_table('exams')
    op.drop_table('subjects')
    op.drop_table('student_statuses')
    op.drop_table('exam_types')
    op.drop_table('departments')
    # ### end Alembic commands ###
